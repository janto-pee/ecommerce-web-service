type User {
  id: ID!
  username: String
  password: String
  email: String
  first_name: String
  last_name: String
  verificationCode: String
  passwordResetCode: String
  is_email_verified: Boolean
  password_changed_at: String
  createdAt: String
  updatedAt: String
}
type forgotPasswordResponse {
  email: String
  message: String
}
input CreateUserInput {
  username: String
  password: String
  email: String
  first_name: String
  last_name: String
}

input UpdateUserInput {
  id: ID!
  username: String
  password: String
  email: String
  first_name: String
  last_name: String
}

type Query {
  users: [User]!
  user(id: ID!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  verifyUser(updateUserInput: UpdateUserInput!, verification: String ): User!
  forgotPassword(email: String ): forgotPasswordResponse!
  resetPassword( id: ID!, resetcode: String,  password: String, ): User!
  removeUser(id: ID!): User
}
